{"version":3,"sources":["webpack:///./src/app/tab3/tab3.module.ts","webpack:///./src/app/tab3/tab3.page.html","webpack:///./src/app/tab3/tab3.page.scss","webpack:///./src/app/tab3/tab3.page.ts"],"names":[],"mappings":"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","file":"tab3-tab3-module.js","sourcesContent":["import { IonicModule } from '@ionic/angular';\nimport { RouterModule } from '@angular/router';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Tab3Page } from './tab3.page';\n\n@NgModule({\n  imports: [\n    IonicModule,\n    CommonModule,\n    FormsModule,\n    RouterModule.forChild([{ path: '', component: Tab3Page }])\n  ],\n  declarations: [Tab3Page]\n})\nexport class Tab3PageModule {}\n","module.exports = \"<ion-header>\\n    <ion-toolbar>\\n        <ion-select interface=\\\"popover\\\" placeholder=\\\"Выберите комнату\\\" slot=\\\"end\\\" [(ngModel)]=\\\"selectRoom\\\">\\n            <ion-select-option *ngFor=\\\"let room of rooms[0]\\\" [value]=\\\"room.id\\\">{{room.name}}</ion-select-option>\\n\\n        </ion-select>\\n        <!--        <ion-icon name=\\\"add\\\" *ngIf = \\\"listLevel\\\" (click)=\\\"newOrder()\\\" slot=\\\"end\\\"></ion-icon>\\n                <ion-icon name=\\\"send\\\" *ngIf = \\\"listLevel\\\" (click)=\\\"sendOrder()\\\" slot=\\\"end\\\"></ion-icon>-->\\n        <!-- Icons -->\\n        <ion-button *ngIf = \\\"listLevel\\\" slot=\\\"end\\\" (click)=\\\"newOrder()\\\">\\n            <ion-icon  name=\\\"add\\\"></ion-icon>\\n        </ion-button>\\n        <!-- Icons -->\\n        <ion-button *ngIf = \\\"listLevel\\\" slot=\\\"end\\\" (click)=\\\"sendOrder()\\\">\\n            <ion-icon  name=\\\"send\\\"></ion-icon>\\n\\n        </ion-button>\\n\\n        <ion-title>\\n            Новый заказ\\n        </ion-title>\\n\\n    </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n\\n    <ion-list *ngIf = \\\"groupLevel\\\">\\n        <ion-item *ngFor=\\\"let g of menuGroups[0]\\\" (click)=\\\"itemClick(g.id)\\\">\\n            <ion-label >{{g.name}}</ion-label >\\n\\n\\n        </ion-item>\\n\\n    </ion-list>\\n\\n    <ion-list *ngIf = \\\"listLevel\\\" id=\\\"list\\\">\\n        <ion-item *ngFor=\\\"let i of menuList[0]; let p = index\\\" >\\n            <div class=\\\"ion-text-start\\\">\\n                {{i.name}}\\n            </div>\\n            <ion-input type=\\\"number\\\"  slot=\\\"end\\\" style = 'background-color: silver' (ngModelChange)=\\\"changeQtx($event, i.id, i.price, i.name, i.groupid)\\\" [(ngModel)]=\\\"values[p]\\\"></ion-input>\\n            <div slot=\\\"end\\\" style='width: 100px'>\\n                {{i.price}} руб.\\n            </div>\\n            <!--            <ion-label slot=\\\"start\\\">{{i.name}}</ion-label>\\n                        <ion-label slot=\\\"end\\\">{{i.price}} руб.</ion-label >-->\\n        </ion-item>\\n\\n    </ion-list>\\n\\n\\n\\n\\n</ion-content>\\n\\n<ion-footer>\\n    <h3>Стоимость заказа : {{orderAmount}} руб.</h3>\\n</ion-footer>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3RhYjMvdGFiMy5wYWdlLnNjc3MifQ== */\"","import {Component} from '@angular/core';\nimport {Storage} from '@ionic/storage';\nimport {globalVars} from '../global_vars';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {NgZone} from '@angular/core';\nimport {AlertController} from '@ionic/angular';\n\n@Component({\n    selector: 'app-tab3',\n    templateUrl: 'tab3.page.html',\n    styleUrls: ['tab3.page.scss']\n})\nexport class Tab3Page {\n    menuGroups: any[] = [];\n    menuGroupsObj = [];\n    menuList = null\n    groupLevel = null;\n    listLevel = null;\n    itemLevel = null;\n    itemid = null;\n    itemname = null;\n    itemnode = null;\n    itemprice = null;\n    list = null;\n    orderItem = {};\n    order = [];\n    orderAmount = 0;\n    values: Array<string> = [];\n    selectRoom = null;\n    rooms: any[] = [];\n    clientid = null;\n    finalOrder = [];\n    constructor(\n        public http: HttpClient,\n        public storage: Storage,\n        public alertController: AlertController,\n        private zone: NgZone\n\n\n    ) {\n        //        this.menuGroups = [\n        //            \"menu 1\",\n        //            \"menu 2\",\n        //            \"menu 3\"\n        //        ];\n        //this.groupLevel = true;\n        this.listLevel = true;\n        //this.itemLevel = false;\n        storage.get('clientid').then((val) => {\n            if (val) {\n                this.clientid = val;\n                let pd = {\n                    \"an\": 0,\n                    \"condition\": [\n                        {\"field\": \"clientid\", \"value\": val}\n                    ]\n\n                };\n                this.http.post(globalVars.apiServerIp + \":\" + globalVars.apiServerPort + \"/table/menugroup/action/get\", pd, {})\n\n                    .subscribe(\n                        data => {\n\n\n\n                            this.menuGroupsObj = JSON.parse(JSON.stringify(data));\n\n\n\n\n\n\n                        },\n                        error => {\n\n                            this.showAlert(JSON.stringify(error) + \" Сервер не отвечает.Ошибка подключения!\");\n                        })\n                this.http.post(globalVars.apiServerIp + \":\" + globalVars.apiServerPort + \"/table/menu/action/get\", pd, {})\n\n                    .subscribe(\n                        data => {\n\n\n\n                            this.menuList = Array.of(data);\n\n\n\n\n\n\n                        },\n                        error => {\n\n                            this.showAlert(JSON.stringify(error) + \" Сервер не отвечает.Ошибка подключения!\");\n                        })\n                this.http.post(globalVars.apiServerIp + \":\" + globalVars.apiServerPort + \"/table/rooms/action/get\", pd, {})\n\n                    .subscribe(\n                        data => {\n\n\n\n                            this.rooms = Array.of(data);\n\n\n\n\n\n\n                        },\n                        error => {\n\n                            this.showAlert(JSON.stringify(error) + \" Сервер не отвечает.Ошибка подключения!\");\n                        })\n            }\n            else {\n                this.showAlert('Сканируйте QR код локации!');\n            }\n        });\n\n    }\n    //    itemClick(id) {\n    //        let pd = {\n    //            \"an\": 0,\n    //            \"condition\": [\n    //                {\"field\": \"groupid\", \"value\": id}\n    //            ]\n    //\n    //        };\n    //        this.http.post(globalVars.apiServerIp + \":\" + globalVars.apiServerPort + \"/table/menu/action/get\", pd, {})\n    //\n    //            .subscribe(\n    //                data => {\n    //\n    //\n    //\n    //                    this.menuList = Array.of(data);\n    //                    this.groupLevel = false;\n    //                    this.listLevel = true;\n    //                    this.itemLevel = false;\n    //\n    //\n    //\n    //                },\n    //                error => {\n    //\n    //                    alert(JSON.stringify(error) + \" Сервер не отвечает.Ошибка подключения!\");\n    //                })\n    //\n    //    }\n    //    listBack() {\n    //        this.groupLevel = true;\n    //        this.listLevel = false;\n    //        this.itemLevel = false;\n    //    }\n    //    itemBack() {\n    //        this.groupLevel = false;\n    //        this.listLevel = true;\n    //        this.itemLevel = false;\n    //    }\n    //    itemListClick(id, name, node, price) {\n    //        this.itemid = id;\n    //        this.itemname = name;\n    //        this.itemnode = node;\n    //        this.itemprice = price;\n    //\n    //        this.groupLevel = false;\n    //        this.listLevel = false;\n    //        this.itemLevel = true;\n    //    }\n    changeQtx(event, id, price, name, groupid) {\n        this.orderItem = {};\n        this.orderItem[\"id\"] = id;\n        this.orderItem[\"qtx\"] = event;\n        this.orderItem[\"amount\"] = event * price;\n        this.orderItem[\"name\"] = name;\n        this.orderItem[\"group\"] = groupid;\n        let push = true;\n        for (var i = 0; i < this.order.length; i++) {\n            if (this.order[i].id == id) {\n                this.order[i] = this.orderItem;\n                push = false;\n            }\n        }\n        if (push) {\n            this.order.push(this.orderItem);\n        }\n        this.orderAmount = 0;\n        for (var i = 0; i < this.order.length; i++) {\n            this.orderAmount += this.order[i].amount;\n        }\n\n//        alert(JSON.stringify(this.order));\n    }\n    newOrder() {\n        this.selectRoom = null;\n        this.orderAmount = 0;\n        this.order = [];\n        for (var i = 0; i < this.values.length; i++) {\n            this.values[i] = '';\n        }\n    }\n    getGroupName(id) {\n        for (var i = 0; i < this.menuGroupsObj.length; i++) {\n            if (this.menuGroupsObj[i].id == id) {\n                return this.menuGroupsObj[i].name;\n            }\n        }\n    }\n    \n    sendOrder() {\n        this.finalOrder = [];\n        let finalOrderItem = {\"group\": \"\", \"items\": []};\n        let finalOrderItemObj = {};\n        if (this.selectRoom == null) {\n            this.showAlert('Комната не выбрана!');\n            return;\n        }\n\n\n        for (var i = 0; i < this.order.length; i++) {\n            if (this.order[i].qtx == null || this.order[i].qtx == '') {\n                continue;\n            }\n            let newGroup = true;\n            finalOrderItemObj = {};\n            finalOrderItemObj[\"name\"] = this.order[i].name;\n            finalOrderItemObj[\"qty\"] = this.order[i].qtx;\n            finalOrderItemObj[\"amount\"] = this.order[i].amount;\n\n            for (var k = 0; k < this.finalOrder.length; k++) {\n                if (this.finalOrder[k].group == this.getGroupName(this.order[i].group)) {\n                    this.finalOrder[k].items.push(finalOrderItemObj);\n                    newGroup = false;\n                    break;\n\n                }\n\n            }\n            if (newGroup) {\n                finalOrderItem = {\"group\": \"\", \"items\": []};\n                this.finalOrder.push(finalOrderItem);\n                this.finalOrder[this.finalOrder.length - 1].group = this.getGroupName(this.order[i].group);\n                this.finalOrder[this.finalOrder.length - 1].items.push(finalOrderItemObj);\n\n\n            }\n        }\n        \n        if (this.finalOrder.length == 0) {\n            this.showAlert(\"Заказ пустой!\");\n            return;\n        }\n        let parcel =\n        {\n            \"an\": 0,\n            \"orderdate\": String(new Date().getFullYear()) + \".\" + String(new Date().getMonth()+1) + \".\" + String(new Date().getDate()),\n            \"roomid\": this.selectRoom,\n            \"status\": \"Новый\",\n            \"content\": JSON.stringify(this.finalOrder),\n            \"clientid\": this.clientid\n        };\n        \n        this.http.post(globalVars.apiServerIp + \":\" + globalVars.apiServerPort + \"/table/orders/action/post\", parcel, {})\n\n            .subscribe(\n                data => {\n\n\n                    if (JSON.stringify(data).indexOf('err')>0){\n                        this.showAlert(\"Ошибка: \" +JSON.stringify(data));\n                    }\n                    else{\n                       this.showAlert(\"Заказ успешно отправлен!\"); \n                        this.newOrder();\n                    }\n\n\n\n\n\n\n                },\n                error => {\n\n                    this.showAlert(JSON.stringify(error) + \" Сервер не отвечает.Ошибка подключения!\");\n                })\n\n    }\n    async showAlert(text) {\n        const alertA = await this.alertController.create({\n            header: 'Информация',\n            //            subHeader: 'Локация',\n            message: text,\n            buttons: [{\n                text: 'ok'\n\n            }]\n        });\n\n        await alertA.present();\n    }\n}\n"],"sourceRoot":""}